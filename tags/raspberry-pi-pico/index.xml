<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry Pi Pico on Simon Willshire</title>
    <link>http://simonwillshire.com/tags/raspberry-pi-pico/</link>
    <description>Recent content in Raspberry Pi Pico on Simon Willshire</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Sep 2021 09:28:00 +0100</lastBuildDate>
    <atom:link href="http://simonwillshire.com/tags/raspberry-pi-pico/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Camper Power Monitoring: Part 2</title>
      <link>http://simonwillshire.com/blog/series/camper-power-monitoring/part-2/</link>
      <pubDate>Tue, 14 Sep 2021 09:28:00 +0100</pubDate>
      <guid>http://simonwillshire.com/blog/series/camper-power-monitoring/part-2/</guid>
      <description>How about those Register Mappings? With much frustration in reverse engineering the modbus register mappings (days of different charge states and spreadsheets&amp;hellip;), thankfully a small community online has put forward a few registers! The registers did not turn out to be in the format I was expecting and required some bit shifting. So without further ado:&#xA;Taken from the github repo @ 49ae2434656, devices-lfp10s.h file:&#xA;#define LFP100S_REG_START 5042 // Offsets of addresses from LFP100S_REG_START #define LFP100S_REG_LOAD_A 0 // 5042 #define LFP100S_REG_VOLTAGE 1 // 5043 #define LFP100S_REG_CAPACITY_1 2 // 5044 #define LFP100S_REG_CAPACITY_2 3 // 5045 #define LFP100S_REG_MAX_CAPACITY_1 4 // 5046 #define LFP100S_REG_MAX_CAPACITY_2 5 // 5047 And the accompanying retreival from the unsigned int register array:</description>
    </item>
  </channel>
</rss>
